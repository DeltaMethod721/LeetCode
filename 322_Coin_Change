class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        if (amount < 0) return -1;
        if (amount == 0) return 0;
        vector<int> dp (amount + 1, -1);
        for (int i = 1; i < dp.size(); ++i){
            // if amount is in coins
            if (find(coins.begin(), coins.end(), i) != coins.end()) dp[i] = 1;
            for (int j = 0; j < coins.size(); ++j){
                if (i > coins[j] && dp[i - coins[j]] > 0){
                    if (dp[i] < 0) dp[i] = dp[i - coins[j]] + 1;
                    if (dp[i] > 0) dp[i] = min(dp[i], dp[i - coins[j]] + 1);
                } 
            }
        }
        return dp[amount];
    }
};