class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int left = 0, right = (int)nums.size() - 1, mid;
        while (left <= right){
            mid = (right - left) / 2 + left;
            if (nums[mid] == target) return true;
            if (nums[left] == nums[right] && nums[mid] == nums[right]){
                right = right - 1;
                left = left + 1;
            }else{
                // check if first half is in order
                if (nums[left] <= nums[mid]){

                    // yes, in order
                    if (nums[mid] >= target && nums[left] <= target){
                        right = mid - 1;
                    }else{
                        left = mid + 1;
                    }
                }else if (nums[mid] <= nums[right]){
                    // check if right is in order
                    if (nums[mid] <= target && nums[right] >= target){
                        left = mid + 1;
                    }else{
                        right = mid - 1;
                    }
                }
            }
            
        }
        return false;
    }
};