BFS
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if (p == NULL && q == NULL) return true;
        if (p == NULL || q == NULL) return false;
        queue<TreeNode*> q1, q2;
        q1.push(p); q2.push(q);
        while (!q1.empty() && !q2.empty()){
            int size = q1.size();
            for (int i = 0; i < size; ++i){
                TreeNode* current_p = q1.front(), *current_q = q2.front();
                q1.pop(); q2.pop();
                if (current_p->val != current_q->val) return false;
                if (current_p->left != NULL && current_q->left != NULL){
                    q1.push(current_p->left); q2.push(current_q->left);
                }else if(current_p->left != NULL || current_q->left != NULL)
                    return false;
                if (current_p->right != NULL && current_q->right != NULL){
                    q1.push(current_p->right); q2.push(current_q->right);
                }else if(current_p->right != NULL || current_q->right != NULL)
                    return false;
            }
        }
        if (!q1.empty() || !q2.empty()) return false;
        return true;
    }
};