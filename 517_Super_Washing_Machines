class Solution {
public:
    int findMinMoves(vector<int>& machines) {
        if (machines.size() <= 1) return 0;
        vector<int> S, C;
        S.push_back(machines[0]);
        for (int i = 1; i < machines.size(); ++i){
            S.push_back(S[i - 1] + machines[i]);
        }
        if (S[machines.size() - 1] % machines.size() != 0) return -1;
        int ave = S[machines.size() - 1] / machines.size();
        for (int i = 0; i < machines.size(); ++i){
            C.push_back(ave * (i + 1));
        }
        
        int result = 0;
        bool doit = true;
        vector<int> temp;
        int a = 1;
        for (int i = 0; i < machines.size(); ++i){
            a *= (S[i] == C[i]);
        }
        if (a == 1) doit = false;

        while (doit){
            temp = S;
            if(temp[0] > C[0]){
                S[0]--;
            }
            for (int i = 1; i < machines.size(); ++i){
                if (temp[i - 1] < C[i - 1]){
                    S[i - 1]++;
                }else{
                    if (temp[i] > C[i]){
                        S[i]--;
                    }
                }
            }
            a = 1;
            for (int i = 0; i < machines.size(); ++i){
                a *= (S[i] == C[i]);
            }
            if (a == 1) doit = false;
            result++;
        }
        return result;
    }
};