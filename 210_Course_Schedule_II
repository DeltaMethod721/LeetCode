class Solution {
public:
    vector<int> findOrder(int numCourses, vector<pair<int, int>>& prerequisites) {
        // topological sort
        vector<int> in_degree(numCourses, 0);
        // initalize in_degree
        for (auto a : prerequisites) in_degree[a.first]++;
        // create graph
        vector<vector<int>> graph(numCourses);
        for (auto a : prerequisites) graph[a.second].push_back(a.first);
        vector<int> res;
        bool valid;
        while (res.size() < numCourses){
            valid = false;
            for (int i = 0; i < in_degree.size(); ++i){
                if (in_degree[i] == 0){
                    valid = true;
                    res.push_back(i);
                    for (auto b : graph[i]) in_degree[b]--;
                    in_degree[i]--;
                }
            }
            if (valid == false) return vector<int>();
        }
        return res;
    }
};