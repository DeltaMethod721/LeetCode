/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        if (root == NULL) return result;
        queue<TreeNode*> q;
        q.push(root);
        int count = 0;
        while (!q.empty()){
            count++;
            vector<int> thisresult;
            int size = q.size();
            for (int i = 0; i < size; ++i){
                TreeNode* current;
                current = q.front(); q.pop();
                if (current->left != NULL) q.push(current->left);
                if (current->right != NULL) q.push(current->right);
                if (count % 2 == 1){
                    // from left to right
                    thisresult.push_back(current->val);
                }else{
                    // from right to left
                    thisresult.insert(thisresult.begin(), current->val);
                }   
            }
            result.push_back(thisresult);
        }
        return result;
    }
};